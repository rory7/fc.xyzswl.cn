<?php
// +----------------------------------------------------------------------
// | 鸣鹤CMS [ New Better  ]
// +----------------------------------------------------------------------
// | Copyright (c) 2006~2017 http://www.mhcms.net All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( 您必须获取授权才能进行使用 )
// +----------------------------------------------------------------------
// | Author: new better <1620298436@qq.com>
// +----------------------------------------------------------------------
namespace app\attachment\controller;

use app\attachment\storges\StorgeFactory;
use app\common\controller\Base;
use app\common\model\File;
use app\wechat\util\WechatUtility;
use think\Log;

class Index extends Base
{
    public $file;
    public $upload_tmp_path;
    public $md5_key;
    public $save_dir;

    public function _initialize()
    {
        parent::_initialize();
        // TODO: Change the autogenerated stub
        $this->file = new \app\common\model\File();
        $this->md5_key = trim(htmlspecialchars(input('param.md5')));
        $this->upload_tmp_path = CACHE_PATH . "upload_tmp" . DIRECTORY_SEPARATOR;
        if (!$this->user) {
            $this->user = check_admin();
        }
        if (empty($this->user)) {
            //echo "Need Login"; die();
            $this->user_id = 0;

        }else{
            $this->user_id = $this->user['id'];
        }

        $this->save_dir = SYS_PATH . "upload_file" .DIRECTORY_SEPARATOR . $this->user_id .DIRECTORY_SEPARATOR;
    }

    /**
     *
     */
    public function upload()
    {
        global $_W, $_GPC;
        $cleanupTargetDir = true;
        $maxFileAge = 5 * 3600; // Temp file age in seconds
        // Chunking might be enabled
        $chunk = input('param.chunk', 0, 'intval');//
        $chunks = input('param.chunks', 1, 'intval');//
        // Create target dir
        if ($this->md5_key) {
            $this->upload_tmp_path .= $this->md5_key;
        }
        if (!is_dir($this->upload_tmp_path)) {
            @mkdir($this->upload_tmp_path , 0777 , true);
        }
        // Remove old temp files
        if ($cleanupTargetDir) {
            if (!is_dir($this->upload_tmp_path) || !$dir = opendir($this->upload_tmp_path)) {
                die('{"jsonrpc" : "2.0", "error" : {"code": 100, "message": "Failed to open temp directory'.$this->upload_tmp_path.'"}, "id" : "id"}');
            }
            while (($file = readdir($dir)) !== false) {
                $tmpfilePath = $this->upload_tmp_path . DIRECTORY_SEPARATOR . $file;
                // If temp file is current file proceed to the next
                if ($tmpfilePath == "{$this->upload_tmp_path}" . DIRECTORY_SEPARATOR . "{$chunk}.part") {
                    continue;
                }
                // Remove temp file if it is older than the max age and is not the current file
                if (preg_match('/\.(part|parttmp)$/', $file) && (@filemtime($tmpfilePath) < time() - $maxFileAge)) {
                    @unlink($tmpfilePath);
                }
            }
            closedir($dir);
        }
        // 获取表单上传文件
        $file = request()->file('file');
        if(!$file){
            //$file->validate(['size'=>15678,'ext'=>'jpg,png,gif'])
            $error = $file->getError();
            WechatUtility::logging("upload error" ,$error );
        }
        //MD5作为名字
        // Get a file name
        if (isset($_REQUEST["filename"])) {
            $fileName = $_REQUEST["filename"];
        } elseif (!empty($_FILES)) {
            $fileName = $_FILES["file"]["name"];
        } else {
            $fileName = uniqid("file_");
        }
        $extend_name = "." . fileext($fileName);
        //final name
        $file_name = ($this->md5_key ? $this->md5_key : random(32)) . $extend_name;
        $target_dir = "upload_file" .DIRECTORY_SEPARATOR . $this->user_id .DIRECTORY_SEPARATOR .  date('Ymd') . DIRECTORY_SEPARATOR;


        $this->save_dir = SYS_PATH . $target_dir; //final dir
        $this->save_path =SYS_PATH . $target_dir . $file_name; // final

        // Create target dir
        if (!is_dir($this->save_dir)) {
            mkdir($this->save_dir, 0777 , true);
        }


        // 分片上传的情况
        if ($chunks > 1) {
            $this->save_path = $this->save_dir . $file_name;
            $file->move($this->upload_tmp_path, "$chunk.part"); //保存分片到临时目录
            $done = true;
            //检查所有分片是否已经上传完毕
            for ($index = 0; $index < $chunks; $index++) {
                if (!file_exists("{$this->upload_tmp_path}" . DIRECTORY_SEPARATOR . "{$index}.part")) {
                    $done = false;
                    break;
                }
            }
            //上传完毕
            if ($done) {
                //尝试创建文件
                if (!$out = @fopen($this->save_path, "wb")) {
                    die('{"jsonrpc" : "2.0", "error" : {"code": 102, "message": "Failed to open output stream."}, "id" : "id"}');
                }
                if (flock($out, LOCK_EX)) {
                    for ($index = 0; $index < $chunks; $index++) {
                        if (!$in = @fopen("{$this->upload_tmp_path}" . DIRECTORY_SEPARATOR . "{$index}.part", "rb")) {
                            break;
                        }
                        while ($buff = fread($in, 4096)) {
                            fwrite($out, $buff);
                        }
                        @fclose($in);
                        @unlink("{$this->upload_tmp_path}" . DIRECTORY_SEPARATOR . "{$index}.part"); //删除分片
                    }
                    flock($out, LOCK_UN);
                }
                @fclose($out);
                @unlink("{$this->upload_tmp_path}"); //删除目录
                @rmdir($this->upload_tmp_path);
                //$str_del = 'cd /var/www/webuploader/server/upload_tmp;rm -Rf '.$md5;
                //exec($str_del);
                $data_ret['url'] = str_replace(SYS_PATH , '' ,  str_replace("\\", "/", $this->save_path));
                $data_ret['md5'] = $this->md5_key;
                $data_ret['user_id'] = $this->user_id;
                $data_ret['filemime'] = input('param.type');
                $data_ret['filesize'] = input('param.size') / 1024;
                $data_ret['created'] = date('Y-m-d H:i:s', time());
                $data_ret['site_id'] = $this->site_id;
                $data_ret['root_id'] = 0;
                $data_ret['file_type'] = '';
                $data_ret['convert'] = '';
                $data_ret['play_url'] = '';
            }
        } else {
            // Get a file name
            $uploaded = $file->move($this->save_dir, $file_name);

            if(!$uploaded){
                $err_msg =  $file->getError();

                WechatUtility::logging("---move file" , $err_msg);
            }


            $data_ret['user_id'] = $this->user_id;
            $data_ret['filename'] = $file_name;
            $data_ret['url'] = str_replace(DIRECTORY_SEPARATOR , '/' ,  $target_dir. $file_name);
//            $data_ret['filemime'] = $uploaded->getMime();
//            $data_ret['filesize'] = $uploaded->getSize();
            $data_ret['created'] = date('Y-m-d H:i:s', time());
            $data_ret['alt'] = '';
            $data_ret['site_id'] = $this->site_id;
            $data_ret['root_id'] = 0;
            $data_ret['file_type'] = '';
            $data_ret['convert'] = '';
            $data_ret['play_url'] = '';
            //$data_ret['save_path'] = $this->save_path;
            $php_md5 = $uploaded->hash('md5');
            $data_ret['md5'] = $php_md5;//

            //todo upload $this->save_path to cloud storge
        }
        // 等待Md5测试稳定再进行Md5调试 目前不检测
        if (isset($data_ret)) {
            //存入数据库
            //todo test if md5 is here
            $this->file->save($data_ret);
            $data_ret['php_md5'] = $php_md5;
            $data_ret['file_id'] = $this->file->file_id;

            $storge = new StorgeFactory();
            $storge->upload($this->file  , $this->save_path);

            echo json_encode($data_ret);
        }
    }

    /**
     * 文件检测 到数据库核对
     * @return mixed
     */
    public function checkmd5()
    {
        $where['md5'] = trim(htmlspecialchars(input('param.md5')));
        $res = $this->file->where($where)->find();
        if ($res) {
            if(file_exists(SYS_PATH ."/". $res['url'])){
                $res['ifExist'] = 1;
                $res['full_path'] = SYS_PATH ."/". $res['url'];
            }else{
                $res['ifExist'] = 0;$res['full_path'] = SYS_PATH ."/". $res['url'];
            }
        } else {
            $res['ifExist'] = 0;
        }
        echo json_encode($res);
    }

    /**
     * 分片检测 实体文件分片
     */
    public function chunkcheck()
    {
        if (!$this->md5_key) {


            $this->md5_key = input("param.chunkMD5");
        }
        $this->upload_tmp_path .= $this->md5_key;
        $chunkIndex = input('param.chunkIndex', '', 'intval');
        $target = "{$this->upload_tmp_path}/{$chunkIndex}.part";
        if (file_exists($target) && filesize($target) == $_POST['size']) {
            $data['ifExist'] = 1;
        } else {
            $data['ifExist'] = 0;
        }
        echo json_encode($data);
    }
}
