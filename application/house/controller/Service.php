<?php
// +----------------------------------------------------------------------
// | 鸣鹤CMS [ New Better  ]
// +----------------------------------------------------------------------
// | Copyright (c) 2006~2017 http://www.mhcms.net All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( 您必须获取授权才能进行使用 )
// +----------------------------------------------------------------------
// | Author: new better <1620298436@qq.com>
// +----------------------------------------------------------------------
namespace app\house\controller;

use app\common\controller\ApiBase;
use app\common\controller\Base;
use app\common\model\Models;
use app\core\util\ContentTag;
use app\core\util\MhcmsModules;
use app\sms\model\Notice;
use think\Controller;
use think\Db;
use think\Exception;

class Service extends ApiBase
{
    private $house_agent = "house_agent";

    public function _initialize()
    {
        global $_W, $_GPC;
        parent::_initialize(); // TODO: Change the autogenerated stub

        if (isset($_GPC['from'])) {
            $_W['from'] = $_GPC['from'];
        }
    }

    public function screen_search(){
        global $_W, $_GPC;

        $query = $_GPC['query'];
        if (!is_array($query)) {
            $query = mhcms_json_decode($query);
        }
        $LAT1 = $query['lat1'];
        $LAT2 = $query['lat2'];
        $LON1 = $query['lng1'];
        $LON2 = $query['lng2'];
        $sql = "SELECT *
FROM mhcms_house_loupan
WHERE lat BETWEEN $LAT1 AND $LAT2
AND (lng BETWEEN $LON1 AND $LON2 )";

        $res = Db::query($sql);
        $ret['data'] = $res;
        $ret['code'] = 1;
        echo json_encode($ret);

    }
    public function lbs_query()
    {
        global $_W, $_GPC;

        $query = $_GPC['query'];
        if (!is_array($query)) {
            $query = mhcms_json_decode($query);
        }
        $model_id = $query['model_id'];
        $table_name = "mhcms_house_$model_id";
        $latitude = $query['lat'];
        $longitude = $query['lng'];
        $i = 0.3; //差值可自定义，值越大，范围就越大
        $min_latitude = $latitude - $i; //纬度最小值
        $max_latitude = $latitude + $i; //纬度最大值
        $min_longitude = $longitude - $i; //经度最小值
        $max_longitude = $longitude + $i; //经度最大值


        $sql = "SELECT *,(SQRT(POWER($latitude - lat, 2) + POWER($longitude  - lng, 2))) AS d FROM mhcms_house_loupan WHERE (lat BETWEEN $min_latitude AND $max_latitude) AND (lng BETWEEN $min_longitude AND $max_longitude) AND d < $i ORDER BY d ASC LIMIT 10;";

        $sql2 = "SELECT  
  *, (  
    3959 * acos (  
      cos ( radians($latitude) )  
      * cos( radians( lat ) )  
      * cos( radians( lng ) - radians($longitude) )  
      + sin ( radians($latitude) )  
      * sin( radians( lat ) )  
    )  
  ) AS distance  
FROM mhcms_house_loupan   
ORDER BY distance  
LIMIT 0 , 20;";

        $sql3 = "
        SELECT *,   
(   
  6371 * acos(   
    cos(radians($latitude))  
    * cos( radians( lat ) )  
    * cos(radians( lng ) - radians($longitude))  
    +  
    sin( radians($latitude) )   
    * sin( radians( lat ) )   
  )   
)   
AS distance   
FROM $table_name 
HAVING distance < 3 
ORDER BY distance LIMIT 0 , 20;";
        // test($sql2);
        $res = Db::query($sql3);
        $ret['data'] = $res;
        $ret['code'] = 1;
        echo json_encode($ret);
    }

    public function list_info_resource()
    {
        global $_W, $_GPC;
        $_GPC['_f'] = isset($_GPC['_f']) ? $_GPC['_f'] : 'json';
        $query = $_GPC['query'];
        if (!is_array($query)) {
            $query = mhcms_json_decode($query);
        }

        if (!isset($query['order']) || !$query['order']) {
            $order = "update_at desc";
        }
        $model_id = 'house_info';
        $model = set_model($model_id);
        $where = [];
        $where['site_id'] = $_W['site']['id'];


        $area_id = (int)$query['area_id'];
        if ($area_id) {
            $areas = ContentTag::fetch_all('area');

            if ($areas[$area_id]['children']) {
                $ids[] = $area_id;
                foreach ($areas[$area_id]['children'] as $area) {
                    $ids[] = $area['id'];
                }
                $where['area_id'] = ['IN', $ids];
            } else {
                $where['area_id'] = $area_id;
            }
        }

        $zhuangxiu = $query['zhuangxiu'];
        if ($zhuangxiu) {
            if (count($zhuangxiu) == 1) {
                $where['zhuangxiu'] = $zhuangxiu[0];
            } else {
                $_zhuangxiu_ids = [];
                foreach ($zhuangxiu as $_zx) {
                    $_zhuangxiu_ids[] = $_zx;
                }
                $where['zhuangxiu'] = ['IN', $_zhuangxiu_ids];
            }

        }
        $shi = $query['shi'];
        if ($shi) {
            $where['shi'] = ['IN', $shi];
        }


        $type = $query['type'];
        if ($type) {
            $where['type'] = ['IN', $type];
        }
        $size = $query['size'];
        if ($size) {
            $_size_data = explode("-", $size[0]);
            if (!is_numeric($_size_data[1])) {
                $where['size'] = ['>', $_size_data[0]];
            } else {
                $where['size'] = ['between', [$_size_data[0], $_size_data[1]]];
            }
        }

        $where['status'] = 99;
        $res = $model->field('id')->where($where)->order($order)->paginate(null, true, ['page' => $query['page']])->toArray();

        foreach ($res['data'] as &$data) {
            $data = Models::get_item($data['id'], $model_id);
        }

        $ret['data'] = $res;
        $ret['code'] = 1;

        echo json_encode($ret);
    }


    public function list_rent_resource()
    {
        global $_W, $_GPC;
        $_GPC['_f'] = isset($_GPC['_f']) ? $_GPC['_f'] : 'json';
        $query = $_GPC['query'];
        if (!is_array($query)) {
            $query = mhcms_json_decode($query);
        }

        if (!isset($query['order']) || !$query['order']) {
            $order = "is_top desc , update_at desc";
        }
        $model_id = 'house_rent';
        $model = set_model($model_id);
        $where = [];
        $where['site_id'] = $_W['site']['id'];

        $loupan_id = $query['loupan_id'];
        if ($loupan_id) {
            $where['loupan_id'] = $loupan_id;
        }
        $area_id = (int)$query['area_id'];
        if ($area_id) {
            $areas = ContentTag::fetch_all('area');

            if ($areas[$area_id]['children']) {
                $ids[] = $area_id;
                foreach ($areas[$area_id]['children'] as $area) {
                    $ids[] = $area['id'];
                }
                $where['area_id'] = ['IN', $ids];
            } else {
                $where['area_id'] = $area_id;
            }
        }

        $zhuangxiu = $query['zhuangxiu'];
        if ($zhuangxiu) {
            if (count($zhuangxiu) == 1) {
                $where['zhuangxiu'] = $zhuangxiu[0];
            } else {
                $_zhuangxiu_ids = [];
                foreach ($zhuangxiu as $_zx) {
                    $_zhuangxiu_ids[] = $_zx;
                }
                $where['zhuangxiu'] = ['IN', $_zhuangxiu_ids];
            }
        }
        $shi = $query['shi'];
        if ($shi) {
            $where['shi'] = $shi;
        }
        $size = $query['size'];
        if ($size) {
            $_size_data = explode("-", $size[0]);
            if (!is_numeric($_size_data[1])) {
                $where['size'] = ['>', $_size_data[0]];
            } else {
                $where['size'] = ['between', [$_size_data[0], $_size_data[1]]];
            }
        }

        $user_esf = "user_rent";
        $user_id = $this->user['id'];
        $where_rent['user_id'] = $user_id;
        $rent_list_model = set_model($user_esf)->where($where_rent)->select()->toArray();
        if (!empty($rent_list_model)){
            $rent_ids = array_column($rent_list_model, 'rent_id');
            $where['id'] = ['IN', $rent_ids];
        }else{
            $where['id'] = 0;
        }


        $where['status'] = 99;
        $res = $model->field('id')->where($where)->order($order)->paginate(null, true, ['page' => $query['page']])->toArray();

        foreach ($res['data'] as &$data) {
            $data = Models::get_item($data['id'], $model_id);
        }


        $this->view->data = $res;

        if ($_GPC['_f'] == 'html') {
            $ret['html'] = $this->view->fetch();
            $ret['data'] = $res;
            echo json_encode($ret);
        }
        if ($_GPC['_f'] == 'json') {
            $ret['data'] = $res;
            $ret['code'] = 1;
            echo json_encode($ret);
        }
    }

    public function list_loupan_resource()
    {
        global $_W, $_GPC;
        $_GPC['_f'] = isset($_GPC['_f']) ? $_GPC['_f'] : 'json';
        $query = $_GPC['query'];
        if (!is_array($query)) {
            $query = mhcms_json_decode($query);
        }
        $model_id = 'house_loupan';
        $model = set_model($model_id);
        $where = [];
        $where['site_id'] = $_W['site']['id'];

        $keyword = $query['keyword'];
        if($keyword){

            $where['loupan_name'] = ["LIKE" ,"%$keyword%" ];
        }

        $area_id = (int)$query['area_id'];
        if ($area_id) {
            $areas = ContentTag::fetch_all('area');
            if ($areas[$area_id]['children']) {
                $ids[] = $area_id;
                foreach ($areas[$area_id]['children'] as $area) {
                    $ids[] = $area['id'];
                }
                $where['area_id'] = ['IN', $ids];
            } else {
                $where['area_id'] = $area_id;
            }
        }

        $loupan_type = $query['loupan_type'];

        if ($loupan_type) {
            if (count($loupan_type) == 1) {
                $where['loupan_type'] = $loupan_type[0];
            } else {
                $_loupan_type_ids = [];
                foreach ($loupan_type as $_zx) {
                    $_loupan_type_ids[] = $_zx;
                }
                $where['loupan_type'] = ['IN', $_loupan_type_ids];
            }
        }


        $price_qujian = $query['price_qujian'];

        if ($price_qujian) {
            if (count($price_qujian) == 1) {
                $where['price_qujian'] = $price_qujian[0];
            } else {
                $_price_qujian_ids = [];
                foreach ($price_qujian as $_zx) {
                    $_price_qujian_ids[] = $_zx;
                }
                $where['price_qujian'] = ['IN', $_price_qujian_ids];
            }
        }


        $zhuangxiu = $query['zhuangxiu'];
        if ($zhuangxiu) {
            $where['zhuangxiu'] = ['LIKE', "%,$zhuangxiu,%"];
        }

        $tags = $query['tags'];
        if ($tags) {
            $where['tags'] = ['LIKE', "%,$tags,%"];
        }


        $where['status'] = 99;

        $res = $model->field('id')->where($where)->order('id desc')->paginate(null, true, ['page' => $query['page']])->toArray();

        foreach ($res['data'] as &$data) {
            $data = Models::get_item($data['id'], $model_id);
        }

        $this->view->data = $res;

        if ($_GPC['_f'] == 'html') {
            $ret['html'] = $this->view->fetch();
            $ret['data'] = $res;
            echo json_encode($ret);
        }
        if ($_GPC['_f'] == 'json') {
            $ret['data'] = $res;
            $ret['code'] = 1;
            echo json_encode($ret);
        }
    }

    /**
     * 二手房列表处理
     * @throws Exception
     * @throws \think\exception\DbException
     */
    public function list_esf_resource()
    {
        global $_W, $_GPC;
        $_GPC['_f'] = isset($_GPC['_f']) ? $_GPC['_f'] : 'json';
        $query = $_GPC['query'];
        if (!is_array($query)) {
            $query = mhcms_json_decode($query);
        }

        if (!isset($query['order']) || !$query['order']) {
            $order = "is_top desc , update_at desc";
        }
        $model_id = 'house_esf';
        $model = set_model($model_id);
        $where = [];
        $where['site_id'] = $_W['site']['id'];

        $loupan_id = $query['loupan_id'];
        if ($loupan_id) {
            $where['loupan_id'] = $loupan_id;
        }
        $area_id = isset($query['area_id']) ? (int)$query['area_id'] : 0;
        if ($area_id) {
            $areas = ContentTag::fetch_all('area');

            if ($areas[$area_id]['children']) {
                $ids[] = $area_id;
                foreach ($areas[$area_id]['children'] as $area) {
                    $ids[] = $area['id'];
                }
                $where['area_id'] = ['IN', $ids];
            } else {
                $where['area_id'] = $area_id;
            }
        }

        $zhuangxiu = isset($query['zhuangxiu']) ? $query['zhuangxiu'] : "";
        if ($zhuangxiu) {
            if (count($zhuangxiu) == 1) {
                $where['zhuangxiu'] = $zhuangxiu[0];
            } else {
                $_zhuangxiu_ids = [];
                foreach ($zhuangxiu as $_zx) {
                    $_zhuangxiu_ids[] = $_zx;
                }
                $where['zhuangxiu'] = ['IN', $_zhuangxiu_ids];
            }

        }
        $shi = isset($query['shi']) ? $query['shi'] : "";;

        if ($shi) {
            if (count($shi) == 1) {
                $where['shi'] = $shi[0];
            } else {
                $_shi_ids = [];
                foreach ($shi as $_shi) {
                    $_shi_ids[] = $_shi;
                }
                $where['shi'] = ['IN', $_shi_ids];
            }

        }

        $user_esf = "user_esf";
        $user_id = $this->user['id'];
        $where_esf['user_id'] = $user_id;
        $esf_list_model = set_model($user_esf)->where($where_esf)->select()->toArray();
        if (!empty($esf_list_model)){
            $esf_ids = array_column($esf_list_model, 'esf_id');
            $where['id'] = ['IN', $esf_ids];
        }else{
            $where['id'] = 0;
        }

        $size = isset($query['size']) ? $query['size'] : "";
        if ($size) {
            $_size_data = explode("-", $size[0]);
            if (!is_numeric($_size_data[1])) {
                $where['size'] = ['>', $_size_data[0]];
            } else {
                $where['size'] = ['between', $_size_data[0] . "," . $_size_data[1]];
            }
        }
        $res = $model->field('id')->where($where)->order($order)->paginate(null, true, ['page' => $query['page']])->toArray();

        foreach ($res['data'] as &$data) {
            $data = Models::get_item($data['id'], $model_id);

            if ($data['is_top'] == 1 && $data['top_expire'] < date("Y-m-d H:i:s", SYS_TIME)) {
                $update['is_top'] = 0;
                $model->where(['id' => $data['id']])->update($update);
            }
        }

        $this->view->data = $res;

        if ($_GPC['_f'] == 'html') {
            $ret['html'] = $this->view->fetch();

            if($_GPC['mha']==0){
                $ret['html'] = str_replace("data-mha" , ''  ,$ret['html']);
            }
            $ret['data'] = $res;
            echo json_encode($ret);
        }
        if ($_GPC['_f'] == 'json') {
            $ret['data'] = $res;
            $ret['code'] = 1;
            echo json_encode($ret);
        }
    }

    public function list_agent_resource($model_id, $agent_id)
    {
        global $_W;
        $allow_mids = [
            'esf' => 'house_esf',
            'rent' => 'house_rent',
        ];
        $where['id'] = $agent_id;
        $agent = set_model($this->house_agent)->where($where)->find();
        $data = [];
        if ($agent) {
            try {
                $model = set_model($allow_mids[$model_id]);
                $where = [];
                $where['user_id'] = $agent['user_id'];
                $res = $model->field('id')->where($where)->paginate()->toArray();

                foreach ($res['data'] as &$data) {
                    $data = Models::get_item($data['id'], $allow_mids[$model_id]);
                }

                $ret['data'] = $res;
                $ret['code'] = 1;
            } catch (Exception $e) {
                $ret['code'] = 3;
                $ret['msg'] = "系统错误";
            }
        }
        return $ret;
    }


    public function area_list($parent_id = 0)
    {
        global $_W, $_GPC;

        $query = $_GPC['query'];
        if (!is_array($query)) {
            $query = mhcms_json_decode($query);
        }
        $where['site_id'] = $_W['site']['id'];
        $where['parent_id'] = $query['parent_id'];
        $data = set_model('area')->where($where)->select()->toArray();

        $ret['code'] = 1;
        $ret['data'] = $data;
        echo json_encode($ret);
    }

    public function load_options()
    {
        global $_W, $_GPC;

        $query = $_GPC['query'];
        if (!is_array($query)) {
            $query = mhcms_json_decode($query);
        }
        $model_id = $query['model_id'];
        $field_name = $query['field_name'];
        $filter_info = Models::gen_user_filter($model_id, null);
        $new_field = [];
        foreach ($filter_info['fields'] as $field) {
            $new_field[$field['field_name']] = $field;
        }


        $options = ContentTag::load_options($model_id, $field_name);

        echo json_encode($options);
    }

    public function add_appointment()
    {
        global $_W, $_GPC;
        $query = $_GPC['query'];
        if (!is_array($query)) {
            $query = mhcms_json_decode($query);
        }
        $model = set_model('house_appointment');
        $query['user_id'] = (int)$this->user['id'];
        $ret = $model->model_info->add_content($query);
        if ($ret['code'] == 1) {
            $ret['msg'] = "数据提交成功！请等待工作人员处理，祝您生活愉快！";
        }
        echo json_encode($ret);
    }

    public function add_weituo()
    {
        global $_W, $_GPC;
        $query = $_GPC['query'];
        if (!is_array($query)) {
            $query = mhcms_json_decode($query);
        }
        $model = set_model('house_weituo');
        $query['user_id'] = (int)$this->user['id'];
        $ret = $model->model_info->add_content($query);
        if ($ret['code'] == 1) {
            $ret['msg'] = "数据提交成功！请等待工作人员处理，祝您生活愉快！";
        }
        echo json_encode($ret);
    }

    public function load_item()
    {
        global $_W, $_GPC;
        $item = [];
        $query = $_GPC['query'];

        $item = Models::get_item((int)$query['id'], "house_" . $query['model_id']);

        $ret['code'] = 1;
        $ret['data'] = $item;
        echo json_encode($ret);
    }


    public function get_user_weituo()
    {

        global $_W, $_GPC;

        $query = $_GPC['query'];

        $where['site_id'] = $_W['site']['id'];
        $where['type'] = (int)$query['customer_type'];
        $where['user_id'] = (int)$this->user['id'];
        $datas = set_model('house_weituo')->where($where)->paginate(null, true, ['page' => $query['page']])->toArray();
        foreach($datas['data'] as &$data){
            $data = Models::get_item($data['id'] ,'house_weituo');
        }
        $ret['code'] = 1;
        $ret['data'] = $datas;
        echo json_encode($ret);
    }

    public function get_user_appointment()
    {
        global $_W, $_GPC;

        $query = $_GPC['query'];

        $where['site_id'] = $_W['site']['id'];
        $where['user_id'] = (int)$this->user['id'];
        $where['custom_type'] = (int)$query['customer_type'];;
        $datas = set_model('house_appointment')->where($where)->paginate(null, true, ['page' => $query['page']])->toArray();

        foreach($datas['data'] as &$data){
            $data = Models::get_item($data['id'] ,'house_appointment');

        }

        $ret['code'] = 1;
        $ret['data'] = $datas;
        echo json_encode($ret);
    }

    public function list_cate($positions = '3')
    {

        global $_W, $_GPC;
//获取所有分类信息
        $cate_model = set_model("house_cate");

        $where = [];
        $positions = explode(",", $positions);
        $where['site_id'] = ['IN', [$_W['root']['site_id'] , $_W['site']['id']]];

        foreach ($positions as $position) {
            $cate_model = $cate_model->whereOr('position', 'like', "%,$position,%");
        }

        //test($cate_model->where($where)->buildSql());
        $_cates = $cate_model->where($where)->select()->toArray();

        $this->have_children_cates = [];

        foreach ($_cates as $_cate) {
            //$_cate = Models::get_item($_cate['id'] , 'market_cate');
            $_cate['image'] = render_file_id($_cate['image']);
            if ($_cate['parent_id'] > 0) {
                $this->have_children_cates[$_cate['id']] = $_cate;
            }
            if (isset($_GPC['cate_id']) && $_GPC['cate_id'] == $_cate['id']) {
                //点亮当前栏目
                $_cate['class'] = "active";
                //记录父栏目
                $active_parent_id = $_cate['parent_id'];
            }
            $this->cates[$_cate['id']] = $_cate;
        }
        //点亮当前父栏目
        if (isset($active_parent_id) && $active_parent_id) {
            $this->cates[$active_parent_id]['class'] = "active";
        }

        /**
         * 栏目导航
         */
        $this->cate_tree = $cate_tree = ContentTag::get_cate_tree([], 0, 0, $this->cates, 'house');
        $ret = [];
        $ret['code'] = 1;
        $ret['data'] = $cate_tree;
        echo json_encode($ret);
    }

    public function list_position_data()
    {
        global $_W, $_GPC;
        $query = $_GPC['query'];
        $rec_loupan = ContentTag::position_data("推荐楼盘");
        $ret['code'] = 1;
        $ret['data'] = $rec_loupan;
        echo json_encode($ret);
    }

    public function post_ask()
    {
        global $_W, $_GPC;
        $module_config = MhcmsModules::get_module_setting('house');

        $query = $_GPC['query'];
        if (!is_array($query)) {
            $query = mhcms_json_decode($query);
        }
        if ($query['loupan_id']) {
            $loupan = set_model('house_loupan')->where(['id' => $query['loupan_id']])->find();
        }
        $query['user_id'] = (int)$this->user['id'];
        $query['status'] = 1;
        if (!$query['openid']) {
            $query['openid'] = "";
        }
        $ret = set_model('house_loupan_ask')->model_info->add_content($query);

        if ($ret['code'] == 1) {
            Notice::send("楼盘提问通知", "wxmsg", $module_config['admin_openid'], ['title' => '您好管理员 有客户提问了' . $query['title'], 'loupan_name' => $loupan['loupan_name'], 'loupan_id' => $loupan['id']]);
        }
        echo json_encode($ret);
        die();
    }
}